#!/usr/bin/env bash

if [[ $DEBUG == 'true' ]]; then
  set -euxo pipefail
else
  set -euo pipefail
fi
IFS=$'\n\t'

kill_polybar() {
  pkill polybar || true
  # Wait until the processes have been shut down
  while pgrep -x polybar >/dev/null; do sleep 1; done
}

move_ws() {
  WORKSPACE=$1
  DIRECTION=$2
  i3-msg workspace "$WORKSPACE"
  i3-msg move workspace to output "$DIRECTION"
}

set_wallpaper() {
  SCREEN=$1
  MODE=$2
  IMAGE=$3
  nitrogen --head="$SCREEN" --set-"$MODE" --save ~/pictures/wallpapers/"$IMAGE"
}

start_bar() {
  export MONITOR=$1
  BAR=$2
  polybar --reload "$BAR" </dev/null >"/var/tmp/polybar-$MONITOR.log" 2>&1 &
}

display() {
  case ${1-} in
  work)
    xrandr \
      --output eDP-1 --mode 1920x1080 --pos 5280x824 --rotate normal \
      --output HDMI-1 --off \
      --output DP-1 --mode 2560x1440 --pos 0x0 --rotate left \
      --output DP-2 --mode 3840x2160 --pos 1440x284 --rotate normal
    move_ws 2 left
    ;;
  *) xrandr --auto ;;
  esac
}

status_bar() {
  kill_polybar
  (
    flock 200
    case ${1-} in
    work)
      start_bar eDP-1 1080p
      start_bar DP-2 4k
      ;;
    *) start_bar eDP-1 1080p ;;
    esac
  ) 200>/var/tmp/polybar-launch.lock
}

wallpaper() {
  case ${1-} in
  work)
    set_wallpaper 0 scaled IMG_20190901_161515-PANO.jpg
    set_wallpaper 1 auto IMG_20190903_163002-EFFECTS.jpg
    set_wallpaper 2 zoom-fill IMG_20190730_155936-PANO.jpg
    ;;
  *) set_wallpaper 0 auto EFFECTS.jpg ;;
  esac
}

show_usage() {
  echo "Usage: screens [-W] [-w ENV] [-s ENV]"
}

cmd_args() {
  if [[ $# -eq 0 ]]; then
    display
    wallpaper
    status_bar
    exit
  fi
  while test $# -gt 0; do
    case $1 in
    -W | --work)
      display work
      wallpaper work
      status_bar work
      exit
      ;;
    -w | --wallpaper) wallpaper "${2-}" ;;
    -s | --status-bar) status_bar "${2-}" ;;
    --help | -h) show_usage ;;
    esac
    shift
  done
}

[ -f ~/.dotfiles/Xresources ] && xrdb -merge -I"$HOME" ~/.dotfiles/Xresources
cmd_args "$@"
